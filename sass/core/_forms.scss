/*doc
---
title: Forms
name: forms
category: Forms
---

TK: better docs

## Text inputs

```html_example
<div class="chunk">
	<label for="test-textinput">I'm a label</label>
	<input id="test-textinput" type="text" value="Text input with value" />
</div>

<div class="chunk">
	<label for="test-textinput2">Just another label</label>
	<input id="test-textinput2" type="text" placeholder="Text input with placeholder" />
</div>

<div class="chunk">
	<label for="test-textarea"l>Here's an area for your text</label>
	<textarea id="test-textarea"></textarea>
</div>

<div class="chunk">
	<label for="test-select">What is this?</label>
	<select id="text-select">
		<option value="One">One</option>
		<option value="Two">Two</option>
		<option value="Three">Three</option>
		<option value="Four">Four</option>
	</select>
</div>
```

*/

// TODO: needs some PCV standardization

label {
	font-size: $font-size-small;
}

fieldset {
  border: 0;
  padding: 0;
  margin: 0;
}


//
// BASIC INPUTS
//
button,
input,
select,
textarea,
.launcher {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.5;
}

#{$all-text-inputs},
textarea,
select,
.launcher {
	background-color: $C_shade;
	border-radius: $defaultRadius;
	border: 1px solid $C_border;
	box-shadow: none;
	box-sizing: border-box;
	display: block;
	margin: 0;
	max-width: 100%;
	padding: $space-half;
	width: 100%;
	&:focus {
		border-color: $C_blue;
		box-shadow: none;
		outline: none;
	}

	.inverted & {
		background-color: $C_shadeInverted;
		border-color: $C_borderInverted;
		color: $C_textPrimaryInverted;
		/*
		&:focus{
			border-color: none;
		}
		*/
	}

	.shaded & {
		// when on an already gray background, don't get gray-er
		background-color: white;
	}
}

#{$all-text-inputs},
select {
	height: ($font-size * $line-height) + $space;
}

textarea {
	min-height: (3 * $font-size * $line-height) + $space;
}

.launcher {
	@extend %backgroundImg--launcher;
	background-position: center right #{$space-quarter};
	background-repeat: no-repeat;
}
.launcher-placeholder {
	font-style: normal;
	color: $C_textTertiary;
	.inverted &{
		color: $C_textTertiaryInverted;
	}
}

input::-webkit-input-placeholder,
textarea::-webkit-input-placeholder {
	font-style: normal;
	color: $C_textTertiary;
	.inverted &{
		color: $C_textTertiaryInverted;
	}
}

//
/* CHECKBOXES AND RADIOS */
//
.checkbox[type=checkbox],
.radio[type=radio] {
  border: none; // iOS Safari shows weird black area around checkbox without this
  background: transparent; // iOS Safari shows weird black area around checkbox without this
  -webkit-appearance: none;
}
//
/* CHECKBOXES */
//

// TODO: doc label-switch
.label--switch {
  font-size: $font-size;
  position: relative;
}

.checkbox[type=checkbox] {
	-webkit-appearance: none;
	cursor: pointer;
	display: inline-block;
	height: $font-size;
	margin: 0 $space 0 0;
	position: relative;
	top: em(1);
	width: $font-size;
	z-index: 0;
	&:before {
		@include transition (transform, 100ms, $ease-out-quad);
		@include transform(rotate(-45deg) scale(0, 0));

		content: "";

		position: absolute;
		left: em(4);
		top: em(3);
		z-index: 1;

		width: em(8);
		height: em(4);

		border: 2px solid $C_textPrimaryInverted;
		border-top-style: none;
		border-right-style: none;
	}

	&:checked {
		&:before {
			@include transform(rotate(-45deg) scale(1, 1));
		}
	}

	&:after {
		content: "";

		position: absolute;
		top: em(-2);
		left: 0;

		width: 100%;
		height: 100%;

		background: $C_contentBG;

		border: 1px solid $C_textTertiary;
		border-radius: $defaultRadius;

		cursor: pointer;
	}

	&:checked, &:active {
		&:after {
			background: $C_link;
		}
	}

	&:hover, &:focus {
		outline: none;
		&:after {
			box-shadow: inset 2px 2px 4px $C_border;
			border: 1px solid $C_textSecondary;
		}
	}
}

//
/* RADIOS */
//
.radio[type=radio] {
	-webkit-appearance: none;
	cursor: pointer;
	display: inline-block;
	height: $font-size;
	margin: 0 $space 0 0;
	position: relative;
	top: 0;
	width: $font-size;
	z-index: 0;

	&:before {
		@include transition (transform, 100ms, $ease-out-quad);
		@include transform(scale(0,0));

		content: "";

		position: absolute;
		top: em(3);
		left: em(2);
		z-index: 1;

		width: em(12);
		height: em(12);

		background: $C_link;

		border-radius: 999px;
	}

	&:checked, &:active {
		&:before {
			@include transform(scale(1,1));
		}
	}

	&:after {
		content: "";

		position: absolute;
		top: 0;
		left: em(-1);

		width: 100%;
		height: 100%;

		background: $C_contentBG;

		border: 1px solid $C_textTertiary;
		border-radius: 999px;
	}

	&:checked, &:hover, &:focus {
		outline: none;
		&:after {
			border: 1px solid $C_link;
		}
	}
}

.inverted {
	// INVERTED RADIO INPUT
	.radio[type=radio] {
		&:after {
			background: $C_contentBGInverted;
			border: 1px solid $C_textSecondaryInverted;
		}
		&:hover, &:focus {
			&:after {
				border: 1px solid $C_textPrimaryInverted;
			}
		}
	}

	// INVERTED CHECKBOX INPUT
	.checkbox[type=checkbox] {
		&:after {
			background: $C_contentBGInverted;
			border: 1px solid $C_textSecondaryInverted;
		}

		&:hover, &:focus {
			&:after {
				box-shadow: inset 2px 2px 4px $C_border;
				border: 1px solid $C_textPrimaryInverted;
			}
		}

		&:checked, &:active {
			&:after {
				background: $C_link;
			}
		}
	}
}

//
/* SEGMENTED SELECTION */
//
.segmented-toggle {
	input {
		display: none;
		&:checked + label {
			background: $C_shade;
			border: 1px solid $C_link;
			.segmented-toggle-title, p {
				color: $C_link;
			}
		}
	}

	label {
		box-sizing: border-box;
		cursor: pointer;
		display: inline-block;
		line-height: $line-height;
		padding: $space-half;
		width: 100%;
		&:hover {
			border: 1px solid $C_link;
			.segmented-toggle-title, p {
				color: $C_textPrimary;
			}
		}
	}
	.segmented-toggle-title, p {
		color: $C_textSecondary;
	}
}

//
/* INLINE FORM */
//
.inline-form {
	margin-left: -$space-quarter;
	margin-right: -$space-quarter;
}

// Meant for use in inline forms
.small-input {
  min-width: $block-2; //need to use min-width because ffbox is weird
}

//
/* TIME PICKER */
//
.time-picker {
  list-style: none;
  margin-bottom: 0;
  padding: 8px 0;
  label {
    display: block;
  }
  li {
    display: inline-block;
  }
}
//
/* Validation */
// ------------------------- //
.has-error {
  #{$all-text-inputs}, textarea, select {
    border-color: $C_red;
  }
 .caption-text {
    color: $C_red;
    margin-top: $space-quarter;
 }
}
