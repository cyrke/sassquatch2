// TODO: this needs a lot of mixin and selector cleanup
// 1) avoid outputting selectors from mixins
// 2) create some clarity around modifiers
// 3) clean up selectors generated in button color mixin (and see #1)
// 4) ???
// 5) PROFIT

/*doc
---
title: Buttons
name: buttons
category: UI Components
---

#### Example

```html_example
<button class="button" href="#">Button</button>
<button class="button button--primary" href="#">Primary Button</button>
<button class="button button--icon" href="#">
	<span class="button-label">Button with right Icon</span>
	<span class="button-icon">X</span>
</button>
<button class="button button--icon button--primary" href="#">
	<span class="button-icon">X</span>
	<span class="button-label">Primary button with left Icon</span>
</button>
<button class="button button--primary button--contrast" href="#">Contrast Button</button>
<button class="button button--small" href="#">Small Button</button>
<button class="button button--bordered button--fullWidth" href="#">Full width button</button>
<button class="button button--primary button--icon button--fullWidth" href="#">
	<span class="button-icon">ヘ(◕。◕ヘ)</span>
	<span class="button-label">Full width primary button with left Icon</span>
</button>
<button class="button button--disabled" href="#">Stop</button>
<button class="button button--primary" disabled>Can't touch this</button>
<input type="submit" class="button button--bordered" value="Disabled" disabled />
```

#### Button variants
A class of `.button` is __required__ for buttons. The following
classes are optional variants:

Class                   | Description
----------------------- | ----------------------------------------
`.button--primary`      | rounded button with dark background; for primary actions
`.button--contrast`     | bold, dark text; use on dark backgrounds or photos (ie. top nav bar)
`.button--small`        | decreases size of button
`.button--fullWidth`    | makes button fill width
`.button--icon`         | button with icon
*/


%button,
.button {
	@extend %buttonBase;
	@include color-all($C_textPrimary);
	background: $C_contentBG;

	&:hover,
	&:active,
	&:focus {
		background: transparentize($C_textPrimary, .8);
		border-color: transparent;
	}
}

%button--primary,
.button--primary {
	@include color-all($C_textPrimaryInverted, true);
	background: $C_button;
	border-color: $C_button;

	&:hover,
	&:active,
	&:focus {
		background: call(nth($btn-hover, 1), $C_button, nth($btn-hover, 2));
	}

	&.button--contrast { // TODO (mikep): look into ways to do this without chaining classes
		@include color-all($C_textPrimary, true);
		background: $C_contentBG;
		border-color: $C_contentBG;

		&:hover,
		&:active,
		&:focus {
			background: transparentize($C_contentBG, .1);
		}
	}

}

%button--contrast,
.button--contrast {
	@include color-all( $C_textPrimaryInverted );
	background: $C_textTertiary;
	border-color: $C_textPrimaryInverted;

	&:hover,
	&:active,
	&:focus {
		background: $C_textSecondary;
		border-color: $C_textPrimaryInverted;
	}
}

//
// Button border modifiers
//
%button--bordered {
	@include color-all($C_button);
	background: transparent;
	border-color: $C_button;
	font-weight: $W_bold;
	&:hover,
	&:active,
	&:focus {
		border: $btn-border $C_button;
		background: transparentize($C_button, .8);
	}
}

// %button--borderless,
// .button--borderless {
// 	border: none;

// 	&:hover,
// 	&:active,
// 	&:focus {
// 		border: none;
// 	}

// }

//
// Disabled buttons
//
.button[disabled],
.button--disabled {
	@include color-all($C_textSecondary, true);
	border: $btn-border $C_border;
	background: transparentize($C_mediumGray, .88) !important;
	cursor: default;

	&,
	&:hover,
	&:active {
		border: $btn-border $C_border;
	}

}

//
// Button size modifiers
//
%button--small,
.button--small {
	font-size: $font-size-small;
	padding: $space-quarter $space-half;
}

%button--fullWidth,
.button--fullWidth {
	display: block;
	width: 100%;
}

//
// Icon buttons
//
$_iconGutter: $space/2;
.button--icon {
	@include display(inline-flex);
	@include flex-wrap(nowrap);
	@include flex-direction(row);
	@include justify-content(space-between);

	@include browser-lessThanIE( 10 ) {
		box-sizing: border-box;
		display: table;
		table-layout: auto;
	}
}

.button-label,
.button-icon {
	@include align-self(center);

	@include browser-lessThanIE( 10 ) {
		display: table-cell;
		width: 100%;
	}
}

.button-label {
	@include flex-grow(1);
	@include flex-basis(0);
}

.button-icon {
	@include flex-grow(0);
	@include flex-shrink(0);
	@include flex-basis(auto);
	width: initial;
	line-height: 0;

	&:first-child {
		margin-right: $_iconGutter;
	}

	&:last-child {
		margin-left: $_iconGutter;
	}

	@include browser-lessThanIE( 10 ) {
		width: auto;
	}
}

.button--small .button-icon {
	height: $font-size;
}
