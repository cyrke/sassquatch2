/*doc
---
title: Buttons
name: buttons
category: UI Components
---

#### Example

```html_example
<a class="button" href="#">Button</a>
<a class="button button--primary" href="#">Primary Button</a>
<a class="button button--bordered" href="#">Bordered Button</a>
<br />
<a class="button button--contrast" href="#">Contrast Button</a>
<a class="button button--iconButton" href="#">
	<i class="button-icon">:D</i>
	<span class="text--caption">Icon Button</span>
</a>
<a class="button button--small" href="#">Small Button</a>
<a class="button button--bordered button--fullWidth" href="#">Full width button</a>
```

#### Button variants
A class of `.button` is __required__ for buttons. The following
classes are optional variants:

Class                   | Description
----------------------- | ----------------------------------------
`.button--primary`      | rounded button with dark background; for primary actions
`.button--contrast`     | bold, dark text; use on dark backgrounds (ie. top nav bar)
`.button--bordered`     | rounded bordered button
`.button--icon`         | cirular icon above caption text (see example above)
`.button--small`        | decreases size of button
*/

// TODO: we might want to refactor buttonColor a bit

$btn-color-map: (
	default: transparent,
	primary: $C_link,
	contrast: $C_textSecondaryInverted
) !default;

%buttonBase {
	@include box-sizing(border-box);
	@include transition(background .15s);
	border-radius: 50px;
	cursor: pointer;
	display: inline-block;
	font-size: $font-size;
	font-weight: $W_bold;
	margin: 0;
	padding: $space-half $space;
	text-align: center;
}

.button {
	@include buttonColor(rgba(0,0,0,0));
	@extend %buttonBase;
	border: none;
	color: map-get($btn-color-map, "primary");
}

%button--bordered,
.button--bordered {
	@include buttonColor(map-get($btn-color-map, "primary"), $btn-border);
	font-weight: $W_normal;

	&:hover,
	&:active,
	&:focus {
		background: transparentize(map-get($btn-color-map, "primary"), .8);
	}

}

%button--contrast,
.button--contrast {
	color: $C_textPrimary;
	font-weight: $W_bold;
}

.button--iconButton {
	font-weight: $W_normal;
	padding: 0;
	&:hover,
	&:focus,
	&:active {
		background: transparent;
		text-decoration: none;
	}
}
.button-icon {
	border: 1px solid map-get($btn-color-map, "primary");
	border-radius: 999px;
	color: map-get($btn-color-map, "primary");
	display: block;
	font-size: $media-xs;
	height: $media-xs;
	margin: 0 auto;
	padding: $space-half;
	width: $media-xs;
}

//
// Button size modifiers
//
%button--small,
.button--small {
	font-size: $font-size-small;
	padding: $space-quarter $space-half;
}

%button--fullWidth,
.button--fullWidth {
	@extend %button--bordered;
	display: block;
	width: 100%;
}

@each $modName, $color in $btn-color-map {
	@include _modifier('button', $modName) {
		@include buttonColor($color);
	}
}
