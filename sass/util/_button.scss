/*doc
---
title: Button utilities
name: button
parent: mixinsPlaceholders
---
*/


/*doc
---
title: Button personality placeholder
name: buttonPersonality
parent: button
---
Disables user-select, sets cursor, and resets text-decoration.

```
@extend %buttonPersonality;
```
*/
%buttonPersonality {
	@include user-select(none) ;
	cursor: pointer;
	text-decoration: none!important;
}


/*doc
---
title: Button color mixin
name: buttonColor
parent: button
---
Sets color properties for buttons

```
@mixin buttonColor($color, $btn-border: false)
```
*/
@mixin buttonColor($color, $btn-border: false) {
  background-color: $color;

  &:focus {
    outline: 0;
  }

  @if opacity($color) < 1 {
    // if the button color has opacity
    &:hover,
    &:active,
    &:focus {
      background: call(nth($btn-hover-opacity, 1), $color, nth($btn-hover-opacity, 2));
    }
  } @else {
    // if the button color is a solid (non-transparent) color
    color: getPrimaryTextColor($color);
    &:hover,
    &:active,
    &:focus {
      background: call(nth($btn-hover, 1), $color, nth($btn-hover, 2));
    }
  }

  @if $btn-border != false { // 3
    border: $btn-border $color;
    background: transparentize($color, 1);
    color: $color;
  }

  &.button--disabled {
    opacity: .4;
    color: $C_textPrimary;
    cursor: default;
    &:hover,
    &:active,
    &:focus {
      background: $color;
    }

    //TODO: we can make these selectors simpler
    &.button--primary {
      background: $C_textTertiary;
    }

  }

}
